[project]
name = "paita"
dynamic = ["version"]
description = 'paita - Python AI Textual Assistant'
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
keywords = ["python", "textual", "ai", "chat", "openai", "chatgpt", "aws", "bedrock"]
authors = [
  { name = "Ville Kärkkäinen", email = "ville.karkkainen@outlook.com" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
  "textual~=0.52.1",
  "boto3~=1.34.34",
  "textual~=0.52.1",
  "loguru~=0.7.2",
  "langchain~=0.1.11",
#  "langchain @ file:///../forks/langchain/libs/langchain",
#  "langchain-core @ file:///../forks/langchain/libs/langcorehain",
#  "langchain-community @ file:///../forks/langchain/libs/community",
#  "langchain @ file:///../langchain/libs/langchain",
#  "langchain-core @ file:///../flangchain/libs/langcorehain",
#  "langchain-community @ file:///../langchain/libs/community",
  "langchain-openai~=0.0.8",
  "appdirs~=1.4.4",
  "pydantic~=2.6.1",
  "cache3~=0.4.3",
  "aiofiles~=23.2.1",
  "pyperclip~=1.8.2",
  "eval-type-backport~=0.1.3"
]

[project.urls]
Documentation = "https://github.com/villekr/paita#readme"
Issues = "https://github.com/villekr/paita/issues"
Source = "https://github.com/villekr/paita"

[project.scripts]
paita = "paita.tui.app:main"

[tool.hatch.version]
path = "src/paita/__about__.py"

[tool.hatch.envs.default]
dependencies = [
  "coverage[toml]>=6.5",
  "pytest",
  "flake8",
  "isort",
  "black",
  "textual-dev",
  "pytest-asyncio",
  "flake8-bugbear",
  "flake8-bandit",
  "pytest-cov",
  "mypy",
  "boto3-stubs",
  "appdirs-stubs",
  "types-aiofiles"
]

[tool.hatch.envs.default.scripts]
test = "pytest {args:tests}"
test-cov = "coverage run -m pytest {args:tests}"
cov-report = [
  "- coverage combine",
  "coverage report",
]
cov = [
  "test-cov",
  "cov-report",
]

[[tool.hatch.envs.all.matrix]]
python = ["3.8", "3.9", "3.10", "3.11", "3.12"]

[[tool.hatch.envs.test.matrix]]
python = ["3.8", "3.9", "3.10", "3.11", "3.12"]

[tool.hatch.envs.types]
dependencies = [
  "mypy>=1.0.0",
]

[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:src/pypi_publish tests}"

[tool.coverage.run]
source_pkgs = ["paita", "tests"]
branch = true
parallel = true
omit = [
  "src/paita/__about__.py",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.coverage.paths]
paita = ["src/paita", "*/paita/src/paita"]
tests = ["tests", "*/paita/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true

[tool.ruff.lint]
ignore = [
  "SIM117",
  "A002",
  "RUF012"
]